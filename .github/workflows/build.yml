name: build
on: [ push, pull_request ]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10" ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true  # Create a virtual environment
          virtualenvs-in-project: true # Create it in .venv in the project root, which is good for caching

      - name: Set up cache for dependencies
        uses: actions/cache@v3
        with:
          path: |
            .venv # Cache virtual environment
            ~/.cache/pypoetry # Cache Poetry's own cache directory
          key: cache-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }} # Cache key
          restore-keys: | # Fallback keys
            cache-${{ matrix.python-version }}-

      - name: Install dependencies
        run: poetry install --sync # --sync ensures the environment strictly matches the lock file

      - name: Run style checks
        run: |
          make check-codestyle
      - name: Run tests
        run: |
          make test
      - name: Run safety checks
        run: |
          make check-safety
